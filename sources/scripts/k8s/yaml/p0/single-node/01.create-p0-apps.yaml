apiVersion: v1
kind: Namespace   
metadata:
  name: p0
  labels:
    name: p0

---
apiVersion: v1
kind: PersistentVolume
metadata: 
  name: p0-pv
spec: 
  capacity: 
    storage: 5Gi
  volumeMode: Filesystem
  accessModes: 
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: p0-storage
  local: 
    path: /home/p0/disk/p0
  nodeAffinity: 
    required: 
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - test-sample

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  namespace: p0
  name: p0-pvc
spec: 
  storageClassName: p0-storage
  accessModes: 
  - ReadWriteOnce
  resources: 
    requests: 
      storage: 5Gi

---
apiVersion: apps/v1 # for versions before 1.8.0 use apps/v1beta1
kind: StatefulSet
metadata:
  namespace: p0
  name: p0-app
  labels:
    app: p0-app
spec:
  serviceName: p0-service
  replicas: 1
  selector:
    matchLabels:
      app: p0-app
  template:
    metadata:
      labels:
        app: p0-app
    spec:
      containers:
      - name: mysql-p0
        image: mysql:p0-1.0 # replace it with your exactly <image_name:tags>
        ports:
        - containerPort: 3306
        volumeMounts: 
          - name: p0-disk
            mountPath: /opt/p0
            #subPath: mysql
      - name: redis-p0
        image: redis:p0-1.0 # replace it with your exactly <image_name:tags>
        ports:
        - containerPort: 6379
        volumeMounts: 
          - name: p0-disk
            mountPath: /opt/p0
            #subPath: redis
      - name: rabbitmq-p0
        image: rabbitmq:p0-1.0 # replace it with your exactly <image_name:tags>
        ports:
        - containerPort: 5672
        - containerPort: 15672
        volumeMounts: 
          - name: p0-disk
            mountPath: /opt/p0
            #subPath: rabbitmq
      - name: tomcat-p0
        image: tomcat:p0-1.0 # replace it with your exactly <image_name:tags>
        ports:
        - containerPort: 8080
        volumeMounts: 
          - name: p0-disk
            mountPath: /opt/p0
            #subPath: tomcat
      - name: nginx-p0
        image: nginx:p0-1.0 # replace it with your exactly <image_name:tags>
        ports:
        - containerPort: 80
        volumeMounts: 
          - name: p0-disk
            mountPath: /opt/p0
            #subPath: nginx
      volumes: 
        - name: p0-disk
          persistentVolumeClaim: 
            claimName: p0-pvc

---
apiVersion: v1
kind: Service
metadata:
  namespace: p0
  name: p0-svc #TODO: to specify your service name
  labels:
    app: p0-svc
spec:
  selector:
    app: p0-app #TODO: change label selector to match your backend pod
  ports:
  - protocol: TCP
    name: http
    #容器暴露的端口
    port: 90 #TODO: choose an unique port on each node to avoid port conflict
    #真实的服务部署端口
    targetPort: 80
  clusterIP: None
#  type: NodePort

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: p0
  annotations:
    nginx.ingress.kubernetes.io/service-weight: ''
  name: p0-ingress
spec:
  rules:
    - host: p0.yzone01.com
      http:
        paths:
          - backend:
              serviceName: p0-svc
              servicePort: 90
            path: /