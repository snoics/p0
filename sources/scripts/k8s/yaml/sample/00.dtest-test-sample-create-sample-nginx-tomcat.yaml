apiVersion: v1
kind: Namespace   
metadata:
  name: sample
  labels:
    name: sample

---
apiVersion: apps/v1 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  namespace: sample
  name: tomcat-p0-deployment
  labels:
    app: tomcat-p0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tomcat-p0
  template:
    metadata:
      labels:
        app: tomcat-p0
    spec:
      containers:
      - name: tomcat-p0
        image: tomcat:p0-1.0 # replace it with your exactly <image_name:tags>
        ports:
        - containerPort: 8080

---
apiVersion: apps/v1 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  namespace: sample
  name: nginx-p0-deployment
  labels:
    app: nginx-p0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-p0
  template:
    metadata:
      labels:
        app: nginx-p0
    spec:
      containers:
      - name: nginx-p0
        image: nginx:p0-1.0 # replace it with your exactly <image_name:tags>
        ports:
        - containerPort: 80

---
apiVersion: apps/v1 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  namespace: sample
  name: redis-p0-deployment
  labels:
    app: redis-p0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-p0
  template:
    metadata:
      labels:
        app: redis-p0
    spec:
      containers:
      - name: redis-p0
        image: redis:p0-1.0 # replace it with your exactly <image_name:tags>
        ports:
        - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  namespace: sample
  name: nginx-p0-svc #TODO: to specify your service name
  labels:
    app: nginx-p0-svc
spec:
  selector:
    app: nginx-p0 #TODO: change label selector to match your backend pod
  ports:
  - protocol: TCP
    name: http
    port: 80 #TODO: choose an unique port on each node to avoid port conflict
    targetPort: 80
  #type: LoadBalancer
  #type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  namespace: sample
  name: tomcat-p0-svc #TODO: to specify your service name
  labels:
    app: tomcat-p0-svc
spec:
  selector:
    app: tomcat-p0 #TODO: change label selector to match your backend pod
  ports:
  - protocol: TCP
    name: http
    #容器暴露的端口
    port: 8080 #TODO: choose an unique port on each node to avoid port conflict
    #真实的服务部署端口
    targetPort: 8080
  #type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  namespace: sample
  name: redis-p0-svc #TODO: to specify your service name
  labels:
    app: redis-p0-svc
spec:
  selector:
    app: redis-p0 #TODO: change label selector to match your backend pod
  ports:
  - protocol: TCP
    name: tcp
    #容器暴露的端口
    port: 6379 #TODO: choose an unique port on each node to avoid port conflict
    #真实的服务部署端口
    targetPort: 6379
  type: NodePort

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: sample
  annotations:
    nginx.ingress.kubernetes.io/service-weight: ''
  name: p0-ingress
spec:
  rules:
    - host: dtest-k8s-p0-nginx.yzone01.com
      http:
        paths:
          - backend:
              serviceName: nginx-p0-svc
              servicePort: 80
            path: /
            
    - host: dtest-k8s-p0-tomcat.yzone01.com
      http:
        paths:
          - backend:
              serviceName: tomcat-p0-svc
              servicePort: 8080
            path: /
